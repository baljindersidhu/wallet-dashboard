{"version":3,"sources":["components/sidenav/Sidenav.js","components/landing-page/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["Sidenav","map","icon","className","src","alt","this","getSidenavActions","key","Component","MONTHS","DAYS","LandingPage","style","margin","LandingPageBackdrop","LandingPageHeader","friend","index","faSearch","type","placeholder","getFriends","faSlidersH","faBell","BudgetStatistics","currentMonth","Date","getMonth","currentYear","getFullYear","faCaretDown","faCircle","getCurrentMonthLabel","DailySpendCategoryChart","bars","lastIndex","length","currentDate","getDate","bar","reverse","label","Fragment","getBar","getBars","DailyProgress","currentDay","getDay","faChevronLeft","faChevronRight","cx","cy","r","x","y","Goals","MyBudget","Transactions","iconSrc","labels","categories","amounts","dayOfExpense","transaction","getTransaction","category","amount","getTransactions","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.88fd7eb2.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Sidenav.css';\n\nexport default class Sidenav extends Component{\n    \n    getSidenavActions(){\n        let sidenavActionIcons = [\n            'dashboard.svg', 'calendar.svg', 'noun_Income_772948.svg', 'mailbox.svg'\n        ];\n    \n        return sidenavActionIcons.map(icon => 'icons/' + icon);\n    }\n    \n    render(){\n        return (\n            <div className=\"sidenavContainer column\">\n                <div className=\"user\">\n                    <img src=\"icons/avatar.png\" alt=\"user_icon\"/>\n                    <div className=\"userName\">Frank</div>\n                    <div className=\"userName\">Foster</div>\n                </div>\n    \n                <div className=\"fillParent\"></div>\n    \n                {this.getSidenavActions().map(\n                    (icon, key) => <div className=\"action\" key={key}><img src={icon} alt={icon}/></div>\n                )}\n    \n                <div className=\"fillParent\"></div>\n    \n                <div className=\"action\"><img src=\"icons/logout.svg\" alt=\"icons/logout.svg\"/></div>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport { faSearch, faSlidersH, faBell, faCaretDown, faCircle, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport './LandingPage.css';\n\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst DAYS = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n\nexport class LandingPage extends Component{\n    \n    render(){\n        return (\n            <div className=\"landingPageContent\">\n                <LandingPageHeader />\n                <div className=\"row\">\n                    <BudgetStatistics />\n\n                    <div style={{\n                        margin: \"0vh 4vw\"\n                    }}>\n                        <DailyProgress />\n                        <Goals />\n                    </div>\n\n                    <div>\n                        <MyBudget />\n                        <Transactions />\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nexport class LandingPageBackdrop extends Component{\n\n    render(){\n        return (\n            <div className=\"landigPageBackdrop\"></div>\n        );\n    }\n\n}\n\nexport class LandingPageHeader extends Component{\n\n    getFriends(){\n        let friendsDir = 'images/friend';\n        let friends = ['','',''];\n        return friends.map((friend, index) => friendsDir + index + '.png');\n    }\n\n    render(){\n        return (\n            <div className=\"landingPageHeader row center-v\">\n\n                <div className=\"searchContainer row center-v\">\n                    <FontAwesomeIcon icon={faSearch}/>\n                    <input type=\"text\" placeholder=\"Search\"/>\n                </div>\n\n                <div className=\"friends row\">\n                    {\n                        this.getFriends().map(\n                            (friend, index) => <div className=\"friend\" key={index}>\n                            <img src={friend} alt={friend}/></div>)\n                    }\n\n                    <div className=\"friend\"><img src=\"icons/add_friend.svg\" alt=\"add_friend.svg\"/></div>\n                </div>\n\n                <div className=\"action\"><FontAwesomeIcon icon={faSlidersH}/></div>\n                <div className=\"action\"><FontAwesomeIcon icon={faBell}/></div>\n            </div>\n        );\n    }\n}\n\nexport class BudgetStatistics extends Component{\n\n    getCurrentMonthLabel(){\n        let currentMonth = new Date().getMonth();\n        let currentYear = new Date().getFullYear();\n        let label = MONTHS[currentMonth] + ' ' + currentYear;\n        return label;\n    }\n\n    render(){\n        return (\n            <div className=\"budgetStatistics\">\n\n                <div className=\"header row center-v\">\n                    <div className=\"heading\">Budget Statistics</div>\n                    <div className=\"fillParent\"></div>\n                    <div className=\"selector row center-v\">\n                        <div className=\"label\">Months</div>\n                        <div className=\"icon\"><FontAwesomeIcon icon={faCaretDown}/></div>\n                    </div>\n                </div>\n\n                <div className=\"card balanceInsights\">\n                    \n                    {/* Menu icon */}\n                    <div className=\"row reverse\">\n                        <div className=\"settings\">\n                            <FontAwesomeIcon icon={faCircle}/><FontAwesomeIcon icon={faCircle}/>\n                        </div>\n                    </div>\n\n                    {/* Total Balance */}\n                    <div className=\"textCenter totalBalance\">\n                        <div className=\"label\">Total Balance</div>\n                        <div className=\"value\">$5045,00</div>\n                    </div>\n\n                    {/* Balance Details */}\n                    <div className=\"row center-v balanceDetails\">\n                        <div>\n                            <div className=\"period\">{this.getCurrentMonthLabel()}</div>\n                            <div className=\"label\">Cost This Month</div>\n                        </div>\n                        <div className=\"fillParent\"></div>\n                        <div className=\"value\">- $2,459,00</div>\n                    </div>\n\n                    {/* Daily Spend Category Chart */}\n                    <DailySpendCategoryChart />\n\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport class DailySpendCategoryChart extends Component{\n\n    getBars(){\n        let bars = [0,1,2,3];\n        let lastIndex = bars.length - 1;\n        let currentMonth = new Date().getMonth();\n        let currentDate = new Date().getDate();\n        bars = bars.map(bar => currentDate - bar);\n        bars.reverse();\n        \n\n        return bars.map((bar, index) => {\n            let label = MONTHS[currentMonth] + ' ' + bar;\n            if(index === lastIndex){\n                return (\n                    <React.Fragment key={bar}>\n                        {this.getBar(label)}\n                    </React.Fragment>\n                )\n            }else{\n                return (\n                    <React.Fragment key={bar}>\n                        {this.getBar(label)}\n                        <div className=\"fillParent\"></div>\n                    </React.Fragment>\n                );\n            }\n        });\n    }\n\n    getBar(label){\n        return (\n            <div className=\"bars\">\n                <div className=\"row alignAtBase\">\n                    <div className=\"greenBar\"></div>\n                    <div className=\"orangeBar\"></div>\n                </div>\n                <div className=\"label textCenter\">{label}</div>\n            </div>\n        );\n    }\n\n    render(){\n        return (\n            <div className=\"dailySpendCategoryChart\">\n                <div className=\"row alignAtBase\">{this.getBars()}</div>\n            </div>\n        );\n    }\n}\n\nexport class DailyProgress extends Component{\n\n    getCurrentDayLabel(){\n        let currentDay = new Date().getDay();\n        return DAYS[currentDay];\n    }\n\n    render(){\n        return (\n            <div className=\"dailyProgress\">\n\n                <div className=\"header row center-v\">\n                    <div className=\"heading\">Daily Progress</div>\n                    <div className=\"fillParent\"></div>\n                    <div className=\"selector row center-v\">\n                        <div className=\"label\">Days</div>\n                        <div className=\"icon\"><FontAwesomeIcon icon={faCaretDown}/></div>\n                    </div>\n                </div>\n\n                <div className=\"card dailySpendInsights\">\n                    <div className=\"cardTitle row center-v\">\n                        <div className=\"icon\"><FontAwesomeIcon icon={faChevronLeft}/></div>\n                        <div className=\"fillParent\"></div>\n                        <div className=\"heading\">Monday</div>\n                        <div className=\"fillParent\"></div>\n                        <div className=\"icon\"><FontAwesomeIcon icon={faChevronRight}/></div>\n                    </div>\n                    <svg className=\"insight\">\n                        <circle className=\"parentCircle\" cx=\"11.9vw\" cy=\"9.15vh\" r=\"4.5vw\"></circle>\n                        <circle className=\"parentInnerCircle\" cx=\"11.9vw\" cy=\"9.15vh\" r=\"3vw\"></circle>\n                        <circle className=\"categ1\" cx=\"16.55vw\" cy=\"5.65vh\" r=\"1.6vw\"></circle>\n                        <circle className=\"categ2\" cx=\"6.5vw\" cy=\"10.45vh\" r=\"1.6vw\"></circle>\n                        <text x=\"16vw\" y=\"6.25vh\">20%</text>\n                        <text x=\"5.8vw\" y=\"11vh\">60%</text>\n                    </svg>\n\n                    <div className=\"spend row center-v\">\n                        <div className=\"icon\"><FontAwesomeIcon icon={faCircle}/></div>\n                        <div className=\"label\">Rubber Duck</div>\n                        <div className=\"fillParent\"></div>\n                        <div className=\"value\">$&nbsp;58.90</div>\n                    </div>\n                    <div className=\"spend row center-v\">\n                        <div className=\"icon\"><FontAwesomeIcon icon={faCircle}/></div>\n                        <div className=\"label\">Spider Costume</div>\n                        <div className=\"fillParent\"></div>\n                        <div className=\"value\">$&nbsp;74.00</div>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport class Goals extends Component{\n\n    render(){\n        return (\n            <div className=\"goals\">\n                \n                <div className=\"header row center-v\">\n                    <div className=\"heading\">Goals</div>\n                    <div className=\"fillParent\"></div>\n                    <div className=\"subheading\">See All</div>\n                </div>\n\n                <div className=\"goal positionRelative\">\n                    <div className=\"backdrop positionRelative\"></div>\n                    <div className=\"row center-v positionAbsolute details\">\n                        \n                        <div className=\"icon\"><img src=\"icons/car.png\" alt=\"car.png\"/></div>\n                        \n                        <div className=\"priceDetails\">\n                            <div className=\"goalName\">Car</div>\n                            <div className=\"price\">$5500,00</div>\n                        </div>\n\n                        <div className=\"fillParent\"></div>\n\n                        <div className=\"icon\"><img src=\"icons/money-bag.svg\" alt=\"money-bag\"/></div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport class MyBudget extends Component{\n\n    render(){\n        return (\n            <div className=\"myBudget\">\n                <div className=\"secondaryBackdrop positionRelative\"></div>\n                <div className=\"backdrop positionRelative\"></div>\n\n                <div className=\"positionAbsolute\">\n                    <div className=\"dotsGrid row reverse\">\n                        <pre>\n                            &bull; &bull;\n                            <br></br>\n                            &bull; &bull;\n                        </pre>\n                    </div>\n                    <div className=\"heading textCenter\">My Budget</div>\n                    <div className=\"budget textCenter\">$5045,00</div>\n                    <div className=\"row center-h\">\n                        <div className=\"progress positionRelative\"></div>\n                    </div>\n                </div>\n\n                <div className=\"positionAbsolute headerIcon\">\n                    <img className=\"positionRelative\" src=\"icons/coins.svg\" alt=\"coins.svg\"/>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport class Transactions extends Component{\n\n    getTransactions(){\n        let transactions = [0,1,2];\n        let iconSrc = [\"icons/supermarket.png\", \"images/friend1.png\", \"icons/diet.png\"];\n        let labels = [\"Shopping\", \"Tom Wilson\", \"Food\"];\n        let categories = [\"Mall\", \"Transactions\", \"Resto\"];\n        let amounts = [\"- $2.00\", \"+ $13.00\", \"- $40.00\"];\n        let dayOfExpense = [\"10 Oct\", \"13 Oct\", \"17 Oct\"];\n\n        return transactions.map(transaction => this.getTransaction(\n            transaction, iconSrc[transaction], labels[transaction],\n            categories[transaction], amounts[transaction],\n            dayOfExpense[transaction]\n        ));\n    }\n\n    getTransaction(transaction, icon, label, category, amount, dayOfExpense){\n        return (\n            <div className=\"transaction row center-v\" key={transaction}>\n                <div className=\"icon row center-h center-v\"><img src={icon} alt={icon}/></div>\n                <div className=\"categDetail\">\n                    <div className=\"label\">{label}</div>\n                    <div className=\"category\">{category}</div>\n                </div>\n                <div className=\"fillParent\"></div>\n                <div className=\"spendDetail\">\n                    <div className=\"amount\">{amount}</div>\n                    <div className=\"timestamp\">{dayOfExpense}</div>\n                </div>\n            </div>\n        );\n    }\n\n    render(){\n        return (\n            <div className=\"transactions\">\n                \n                <div className=\"header row center-v\">\n                    <div className=\"heading\">Transactions</div>\n                    <div className=\"fillParent\"></div>\n                    <div className=\"subheading\">See All</div>\n                </div>\n\n                <React.Fragment>\n                    {this.getTransactions()}\n                </React.Fragment>\n\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport Sidenav from './components/sidenav/Sidenav';\nimport {LandingPage, LandingPageBackdrop} from './components/landing-page/LandingPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Sidenav/>\n      <LandingPageBackdrop/>\n      <LandingPage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}